name: Tests
"on":
    pull_request_target: {}
    push:
        branches:
            - main
jobs:
    create-builder:
        name: Create Builder Test
        runs-on:
            - ubuntu-latest
        steps:
            - name: Docker login gcr.io
              uses: docker/login-action@v1
              with:
                password: ${{ secrets.RIFF_GCLOUD_SERVICE_ACCOUNT_KEY }}
                registry: gcr.io
                username: _json_key
            - uses: actions/checkout@v2
            - name: Install pack
              run: |
                #!/usr/bin/env bash

                set -euo pipefail

                mkdir -p "${HOME}"/bin
                echo "${HOME}/bin" >> "${GITHUB_PATH}"

                curl \
                  --location \
                  --show-error \
                  --silent \
                  "https://github.com/buildpacks/pack/releases/download/v${PACK_VERSION}/pack-v${PACK_VERSION}-linux.tgz" \
                  | tar -C "${HOME}"/bin/ -xzv pack
              env:
                PACK_VERSION: 0.14.1
            - id: version
              name: Compute Version
              run: |
                #!/usr/bin/env bash

                set -euo pipefail

                if [[ ${GITHUB_REF} =~ refs/tags/v([0-9]+\.[0-9]+\.[0-9]+) ]]; then
                  VERSION=${BASH_REMATCH[1]}
                elif [[ ${GITHUB_REF} =~ refs/heads/(.+) ]]; then
                  VERSION=${BASH_REMATCH[1]}
                else
                  VERSION=$(git rev-parse --short HEAD)
                fi

                echo "::set-output name=version::${VERSION}"
                echo "Selected ${VERSION} from
                  * ref: ${GITHUB_REF}
                  * sha: ${GITHUB_SHA}
                "
            - name: Create Builder
              run: |
                #!/usr/bin/env bash

                set -euo pipefail

                if [[ -n "${PUBLISH+x}" ]]; then
                  pack create-builder \
                    "${BUILDER}:${VERSION}" \
                    --config builder.toml \
                    --publish

                    echo "::set-output name=digest::$(crane digest "${BUILDER}:${VERSION}")"
                else
                  pack create-builder \
                    "${BUILDER}:${VERSION}" \
                    --config builder.toml
                fi
              env:
                BUILDER: test
                VERSION: ${{ steps.version.outputs.version }}
    unit:
        name: Unit Test
        runs-on:
            - ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: actions/cache@v2
              with:
                key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
                path: ${{ env.HOME }}/go/pkg/mod
                restore-keys: ${{ runner.os }}-go-
            - uses: actions/setup-go@v2
              with:
                go-version: "1.15"
            - name: Install richgo
              run: |
                #!/usr/bin/env bash

                set -euo pipefail

                GO111MODULE=on go get -u -ldflags="-s -w" github.com/kyoh86/richgo
            - name: Run Tests
              run: |
                #!/usr/bin/env bash

                set -euo pipefail

                richgo test ./...
              env:
                RICHGO_FORCE_COLOR: "1"
